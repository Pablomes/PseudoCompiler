FUNCTION BinarySearch(A:ARRAY[] OF INTEGER, Target:INTEGER, n:INTEGER) RETURNS INTEGER
	
	DECLARE Left:INTEGER
	DECLARE Right:INTEGER
	DECLARE Mid:INTEGER

	Left <- 1
	Right <- n
	
	WHILE Left <= Right DO
		Mid <- (Left + Right) DIV 2

		IF A[Mid] = Target THEN
			RETURN Mid
		ELSE
			IF A[Mid] < Target THEN
				Left <- Mid + 1
			ELSE
				Right <- Mid - 1
			ENDIF
		ENDIF
	ENDWHILE

	RETURN -1
ENDFUNCTION

// MAIN PROGRAM

CONSTANT ArraySize = 10
DECLARE Numbers : ARRAY[1 : ArraySize] OF INTEGER

OUTPUT "Enter ", ArraySize, " numbers in ascending order:"
FOR i <- 1 TO ArraySize
	INPUT Numbers[i]
NEXT i

DECLARE Target : INTEGER
OUTPUT "Enter the number to search for:"
INPUT Target

DECLARE Result : INTEGER
Result <- BinarySearch(Numbers, Target, ArraySize)

IF Result = -1 THEN
	OUTPUT Target, " was not found in the array."
ELSE
	OUTPUT Target, " was found at index ", Result, "."
ENDIF